-------------
--Задание 4.1
-------------
--База данных содержит список аэропортов практически всех крупных городов России.
--В большинстве городов есть только один аэропорт. Исключение составляет:

SELECT a.city,
       COUNT(a.airport_code) AS airports_cont
FROM dst_project.airports a
GROUP BY 1
HAVING count(a.airport_code) > 1;

-------------
--Задание 4.2
-------------
--Вопрос 1. Таблица рейсов содержит всю информацию о прошлых, текущих и
--запланированных рейсах. Сколько всего статусов для рейсов определено в таблице?

SELECT COUNT(DISTINCT a.status)
FROM dst_project.flights a;

--Вопрос 2. Какое количество самолетов находятся в воздухе на момент
--среза в базе (статус рейса «самолёт уже вылетел и находится в воздухе»).

SELECT COUNT(*)
FROM dst_project.flights a
WHERE a.status = 'Departed';

--Вопрос 3. Места определяют схему салона каждой модели.
--Сколько мест имеет самолет модели  (Boeing 777-300)?

SELECT COUNT(s.seat_no)
FROM dst_project.seats s
    INNER JOIN dst_project.aircrafts a 
	ON a.aircraft_code = s.aircraft_code
WHERE a.model = 'Boeing 777-300';

--Вопрос 4. Сколько состоявшихся (фактических) рейсов было совершено
--между 1 апреля 2017 года и 1 сентября 2017 года?
--Здесь и далее состоявшийся рейс означает, что он не отменён, и самолёт прибыл в пункт назначения.

SELECT COUNT(*)
FROM dst_project.flights f
WHERE (f.status = 'Arrived')
  AND (f.actual_arrival BETWEEN '2017-04-01' AND '2017-09-01');


-------------
--Задание 4.3
-------------
--Вопрос 1. Сколько всего рейсов было отменено по данным базы?

SELECT COUNT(*)
FROM dst_project.flights f
WHERE f.status = 'Cancelled';

--Вопрос 2. Сколько самолетов моделей типа Boeing, Sukhoi Superjet, Airbus
--находится в базе авиаперевозок?

SELECT COUNT(*)
FROM dst_project.aircrafts a
WHERE a.model like 'Boeing%';


SELECT COUNT(*)
FROM dst_project.aircrafts a
WHERE a.model like 'Sukhoi Superjet%';


SELECT COUNT(*)
FROM dst_project.aircrafts a
WHERE a.model like 'Airbus%';

--Вопрос 3. В какой части (частях) света находится больше аэропортов?

SELECT CASE
           WHEN a.timezone like 'Asia%' THEN 'Asia'
           WHEN a.timezone like 'Europe%' THEN 'Europe'
           WHEN a.timezone like 'Australia%' THEN 'Australia'
           ELSE 'others'
       END AS timezone,
       COUNT(*)
FROM dst_project.airports AS a
GROUP BY 1
ORDER BY 2 DESC;

--Вопрос 4. У какого рейса была самая большая задержка прибытия за все время
--сбора данных? Введите id рейса (flight_id).

SELECT f.flight_id,
       f.actual_arrival - f.scheduled_arrival AS delay_arrival
FROM dst_project.flights f
WHERE f.status = 'Arrived' 
--AND f.actual_arrival is not null
ORDER BY delay_arrival DESC
LIMIT 1;


-------------
--Задание 4.4
-------------
--Вопрос 1. Когда был запланирован самый первый вылет, сохраненный в базе данных?

SELECT MIN(f.scheduled_departure)
FROM dst_project.flights f;

--Вопрос 2. Сколько минут составляет запланированное время полета в самом длительном рейсе?

SELECT MAX(EXTRACT(EPOCH FROM 
		   (f.scheduled_arrival - f.scheduled_departure))/60) AS flight_time
FROM dst_project.flights f;

--Вопрос 3. Между какими аэропортами пролегает самый длительный по времени запланированный рейс?

SELECT f.departure_airport,
       f.arrival_airport,
       (f.scheduled_arrival - f.scheduled_departure) AS flight_time
FROM dst_project.flights f
ORDER BY flight_time DESC
LIMIT 1;

--Вопрос 4. Сколько составляет средняя дальность полета среди всех самолетов в минутах?
--Секунды округляются в меньшую сторону (отбрасываются до минут).

SELECT floor(avg(EXTRACT(EPOCH FROM 
	                  (f.scheduled_arrival - f.scheduled_departure))/60)) AS flight_time_avg
FROM dst_project.flights f;


-------------
--Задание 4.5
-------------
--Вопрос 1. Мест какого класса у SU9 больше всего?

SELECT s.fare_conditions,
       COUNT(*)
FROM dst_project.seats s
WHERE s.aircraft_code='SU9'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;

--Вопрос 2. Какую самую минимальную стоимость составило бронирование за всю историю?

SELECT MIN(b.total_amount)
FROM dst_project.bookings b;

-- или

SELECT b.total_amount
FROM dst_project.bookings b
ORDER BY 1
LIMIT 1;

--Вопрос 3. Какой номер места был у пассажира с id = 4313 788533?

SELECT bp.seat_no
FROM dst_project.boarding_passes bp
    INNER JOIN dst_project.tickets t 
	ON bp.ticket_no=t.ticket_no
WHERE t.passenger_id = '4313 788533';


-------------
--Задание 5.1
-------------
--Вопрос 1. Анапа — курортный город на юге России. Сколько рейсов прибыло в Анапу за 2017 год?
-- Анапа -> AAQ(airport_code)

SELECT COUNT(*) 
FROM dst_project.flights f
WHERE f.arrival_airport='AAQ'
  AND f.status = 'Arrived'        
--AND f.actual_arrival is not null
  AND date_trunc('year', f.actual_arrival) = '2017-01-01';

--Вопрос 2. Сколько рейсов из Анапы вылетело зимой 2017 года?

SELECT COUNT(*)
FROM dst_project.flights f
WHERE f.departure_airport='AAQ'
  AND f.actual_departure IS NOT NULL 
--AND f.status !='Cancelled'
  AND (date_trunc('month', f.actual_departure) IN ('2017-01-01',
                                                   '2017-02-01',
                                                   '2017-12-01'));

--Вопрос 3. Посчитайте количество отмененных рейсов из Анапы за все время.

SELECT COUNT(*)
FROM dst_project.flights f
WHERE f.departure_airport='AAQ'
  AND f.status = 'Cancelled';

--Вопрос 4. Сколько рейсов из Анапы не летают в Москву?

SELECT COUNT(f.flight_no) 
FROM dst_project.flights f
INNER JOIN dst_project.airports a ON f.arrival_airport=a.airport_code
WHERE f.departure_airport='AAQ'
  AND status != 'Cancelled'
  AND a.city != 'Moscow';

--Вопрос 5. Какая модель самолета летящего на рейсах из Анапы имеет больше всего мест?

SELECT DISTINCT m.model,
                m.seat_count
FROM dst_project.flights f
  INNER JOIN
  (SELECT a.aircraft_code,
          a.model,
          count(s.*) AS seat_count
   FROM dst_project.seats s
       INNER JOIN dst_project.aircrafts a 
	   ON a.aircraft_code = s.aircraft_code
   GROUP BY a.aircraft_code,
            a.model) m 
    ON f.aircraft_code = m.aircraft_code
WHERE f.departure_airport='AAQ'
ORDER BY m.seat_count DESC
LIMIT 1;

--тоже самое, только с with
WITH m AS
  (SELECT a.aircraft_code,
          a.model,
          count(s.*) AS seat_count
   FROM dst_project.seats s
       INNER JOIN dst_project.aircrafts a 
	  ON a.aircraft_code = s.aircraft_code
   GROUP BY a.aircraft_code,
            a.model)
SELECT DISTINCT m.model,
                m.seat_count
FROM dst_project.flights f
    INNER JOIN m 
	ON f.aircraft_code = m.aircraft_code
WHERE f.departure_airport='AAQ'
ORDER BY m.seat_count DESC
LIMIT 1;


--======================================================================

------------------------------
--Итоговый набор 1
(data-2016_12_2017_01_02.csv)
------------------------------

SELECT *
FROM dst_project.flights
WHERE departure_airport = 'AAQ'
  AND status not in ('Cancelled')
  AND (date_trunc('month', scheduled_departure) in ('2017-01-01',
                                                    '2017-02-01',
                                                    '2016-12-01'));

-------------------------------------------------------
--Итоговый набор 2 - он используется для анализа данных
(data-2016_12_2017_01_02_full.csv)
-------------------------------------------------------

WITH s AS
  (SELECT ac.aircraft_code,
          ac.model,
          count(s1.seat_no) AS seat_count
   FROM dst_project.aircrafts ac
   INNER JOIN dst_project.seats s1 USING(aircraft_code)
   GROUP BY 1,
            2),
t AS
  (SELECT tf.flight_id,
          count(tf.ticket_no) AS ticket_count,
          sum(tf.amount) AS ticket_sum
   FROM dst_project.ticket_flights tf
   GROUP BY 1)
SELECT f.scheduled_departure,
       f.arrival_airport,
       ap.city,
       EXTRACT(EPOCH
               FROM (f.actual_arrival-f.actual_departure))/60 AS flight_minutes,
       s.model,
       s.seat_count,
       t.ticket_count,
       t.ticket_sum
FROM dst_project.flights f
  INNER JOIN dst_project.airports ap 
    ON f.arrival_airport=ap.airport_code
  INNER JOIN s USING(aircraft_code)
  LEFT JOIN t USING(flight_id)
WHERE departure_airport = 'AAQ'
  AND status not in ('Cancelled')
  AND (date_trunc('month', scheduled_departure) in ('2017-01-01',
                                                    '2017-02-01',
                                                    '2016-12-01'))
ORDER BY 1;